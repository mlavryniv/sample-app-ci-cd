name: CI - Build and push to ECR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Install semantic-release
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/exec

      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release --ci
          echo "version=$(npx semantic-release --dry-run | grep 'next release version is' | awk '{print $NF}')" >> $GITHUB_OUTPUT

      - name: Extract version
        run: echo "RELEASE_VERSION=${{ steps.semantic.outputs.version }}" >> $GITHUB_ENV

      # Authenticate to ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 341743050818.dkr.ecr.us-east-1.amazonaws.com

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          IMAGE_REPO=341743050818.dkr.ecr.us-east-1.amazonaws.com/my_demo/sample_app_cicd
          VERSION=${{ env.RELEASE_VERSION }}
          
          docker build -t $IMAGE_REPO:$VERSION .
          docker push $IMAGE_REPO:$VERSION
          
          # also tag latest
          docker tag $IMAGE_REPO:$VERSION $IMAGE_REPO:latest
          docker push $IMAGE_REPO:latest
